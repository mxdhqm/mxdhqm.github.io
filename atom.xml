<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mxdhqm&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mxdhqm.com/"/>
  <updated>2017-09-11T14:37:32.000Z</updated>
  <id>http://mxdhqm.com/</id>
  
  <author>
    <name>mxdhqm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VPS Notes</title>
    <link href="http://mxdhqm.com/2017/08/27/VPS%20Notes/"/>
    <id>http://mxdhqm.com/2017/08/27/VPS Notes/</id>
    <published>2017-08-27T06:38:11.000Z</published>
    <updated>2017-09-11T14:37:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>个人VPS折腾笔记(Based on Center OS 7)<br><a id="more"></a><br>近期搬瓦工上线了CN2线路的VPS,售价$29.9，还不错，便入手了一台。<br><a href="https://bwh1.net/aff.php?aff=18228&amp;pid=56" target="_blank" rel="external">购买链接(含aff)</a></p>
<h1 id="加速（锐速-BBR）"><a href="#加速（锐速-BBR）" class="headerlink" title="加速（锐速,BBR）"></a>加速（锐速,BBR）</h1><h2 id="锐速"><a href="#锐速" class="headerlink" title="锐速"></a>锐速</h2><h3 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a>安装wget</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> wget</div></pre></td></tr></table></figure>
<h3 id="下载锐速脚本"><a href="#下载锐速脚本" class="headerlink" title="下载锐速脚本"></a>下载锐速脚本</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/wn789/serverspeeder/master/serverspeeder.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
<h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bash </span>serverspeeder.sh</div></pre></td></tr></table></figure>
<p>默认脚本不支持Center OS,需要更换内核（版本：3.10.0-327.el7.x86_64）</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http:<span class="regexp">//</span>xz.wn789.com<span class="regexp">/CentOSkernel/</span>kernel-<span class="number">3.10</span>.<span class="number">0</span>-<span class="number">229.1</span>.<span class="number">2</span>.el7.x86_64.rpm --force</div></pre></td></tr></table></figure>
<p>查看安装好的内核</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> kernel</div></pre></td></tr></table></figure>
<p>存在kernel-3.10.0-327.el7.x86_64即可</p>
<p>重启VPS</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">reboot</div><div class="line">uname -<span class="selector-tag">a</span> 			<span class="comment">//查看是否更换成功</span></div></pre></td></tr></table></figure>
<p>内核如下</p>
<figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Linux host.localdomain <span class="number">3.10</span>.<span class="number">0</span><span class="number">-229.1</span>.<span class="number">2</span>.el<span class="number">7</span>.<span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span> <span class="symbol">#1</span> SMP Fri Mar <span class="number">27</span> <span class="number">03</span>:<span class="number">04</span>:<span class="number">26</span> UTC <span class="number">2015</span> <span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span> <span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span> <span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span> GNU/Linux</div></pre></td></tr></table></figure>
<p>再次执行脚本</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">bash </span>serverspeeder.sh</div></pre></td></tr></table></figure>
<h2 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h2><h3 id="安装wget-1"><a href="#安装wget-1" class="headerlink" title="安装wget"></a>安装wget</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> wget</div></pre></td></tr></table></figure>
<h3 id="下载bbr脚本并执行"><a href="#下载bbr脚本并执行" class="headerlink" title="下载bbr脚本并执行"></a>下载bbr脚本并执行</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//github.<span class="keyword">com</span>/teddysun/across/raw/master/bbr.<span class="keyword">sh</span></div><div class="line">chmod +<span class="keyword">x</span> bbr.<span class="keyword">sh</span></div><div class="line">./bbr.<span class="keyword">sh</span></div></pre></td></tr></table></figure>
<h3 id="查看安装情况"><a href="#查看安装情况" class="headerlink" title="查看安装情况"></a>查看安装情况</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">uname -<span class="built_in">r</span></div><div class="line">sysctl <span class="keyword">net</span>.ipv4.tcp_available_congestion_control	<span class="comment">//查看返回值</span></div><div class="line">返回<span class="keyword">net</span>.ipv4.tcp_available_congestion_control = bbr cubic reno即正常</div><div class="line"></div><div class="line">sysctl <span class="keyword">net</span>.ipv4.tcp_congestion_control</div><div class="line">返回 <span class="keyword">net</span>.ipv4.tcp_congestion_control = bbr</div><div class="line"></div><div class="line">lsmod | grep bbr			<span class="comment">//查看bbr是否启动</span></div></pre></td></tr></table></figure>
<hr>
<h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><p>centerOS 7默认为firewalld防火墙<br>使用方法</p>
<h2 id="firewalld的基本使用"><a href="#firewalld的基本使用" class="headerlink" title="firewalld的基本使用"></a>firewalld的基本使用</h2><p>启动:    <code>systemctl start firewalld</code></p>
<p>查看状态:    <code>systemctl status firewalld</code></p>
<p>停止： <code>systemctl disable firewalld</code></p>
<p>禁用： <code>systemctl stop firewalld</code></p>
<h2 id="systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"><a href="#systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。" class="headerlink" title="systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"></a>systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</h2><p>启动一个服务：<code>systemctl start firewalld.service</code></p>
<p>关闭一个服务：<code>systemctl stop firewalld.service</code></p>
<p>重启一个服务：<code>systemctl restart firewalld.service</code></p>
<p>显示一个服务的状态：<code>systemctl status firewalld.service</code></p>
<p>在开机时启用一个服务：<code>systemctl enable firewalld.service</code></p>
<p>在开机时禁用一个服务：<code>systemctl disable firewalld.service</code></p>
<p>查看服务是否开机启动：<code>systemctl is-enabled firewalld.service</code></p>
<p>查看已启动的服务列表：<code>systemctl list-unit-files|grep enabled</code></p>
<p>查看启动失败的服务列表：<code>systemctl --failed</code></p>
<h2 id="配置firewalld-cmd"><a href="#配置firewalld-cmd" class="headerlink" title="配置firewalld-cmd"></a>配置firewalld-cmd</h2><p>查看版本： <code>firewall-cmd --version</code></p>
<p>查看帮助： <code>firewall-cmd --help</code></p>
<p>显示状态： <code>firewall-cmd --state</code></p>
<p>查看所有打开的端口： <code>firewall-cmd --zone=public --list-ports</code></p>
<p>更新防火墙规则： <code>firewall-cmd --reload</code></p>
<p>查看区域信息:  <code>firewall-cmd --get-active-zones</code></p>
<p>查看指定接口所属区域： <code>firewall-cmd --get-zone-of-interface=eth0</code></p>
<p>拒绝所有包：<code>firewall-cmd --panic-on</code></p>
<p>取消拒绝状态： <code>firewall-cmd --panic-off</code></p>
<p>查看是否拒绝： <code>firewall-cmd --query-panic</code></p>
<p>那怎么开启一个端口呢</p>
<p>添加<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zone=public</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">port=80/tcp</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">permanent</span></div><div class="line"><span class="comment">(</span><span class="literal">-</span><span class="literal">-</span><span class="comment">permanent永久生效，没有此参数重启后失效)</span></div></pre></td></tr></table></figure></p>
<p>重新载入<br> <code>firewall-cmd --reload</code></p>
<p>查看<br><code>firewall-cmd --zone= public --query-port=80/tcp</code></p>
<p>删除</p>
<p><code>firewall-cmd --zone= public --remove-port=80/tcp --permanent</code></p>
<hr>
<h1 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>安装编译环境<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">sudo</span> <span class="comment">yum</span> <span class="comment">install</span> <span class="comment">gcc</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span><span class="literal">+</span><span class="literal">+</span></div></pre></td></tr></table></figure></p>
<p>安装nvm<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -o- https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/creationix/</span>nvm<span class="regexp">/v0.31.1/i</span>nstall.sh | bash</div><div class="line">nvm --version					<span class="regexp">//</span>查看安装的nvm版本</div></pre></td></tr></table></figure></p>
<p>选择版本并安装<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nvm list-remote				//查看所有<span class="keyword">node</span><span class="title">版本</span></div><div class="line"><span class="title">nvm</span> install v6.<span class="number">11.2</span>			//安装v6.<span class="number">11.2</span></div><div class="line"><span class="keyword">node</span> <span class="title">--version</span>				//查看安装的<span class="keyword">node</span><span class="title">版本</span></div></pre></td></tr></table></figure></p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> git-core</div></pre></td></tr></table></figure>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-cli -g</div><div class="line">hexo <span class="comment">--version</span></div></pre></td></tr></table></figure>
<h3 id="安装nginx-默认配置"><a href="#安装nginx-默认配置" class="headerlink" title="安装nginx(默认配置)"></a>安装nginx(默认配置)</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">yum install -y pcre pcre-devel	<span class="string">//PCRE</span> pcre-devel 安装</div><div class="line">yum install -y zlib zlib-devel	<span class="string">//zlib</span> 安装</div><div class="line">yum install -y openssl openssl-devel		<span class="string">//OpenSSL</span> 安装</div><div class="line">wget -c https:<span class="string">//nginx.org/download/nginx-1.12.1.tar.gz</span>		<span class="string">//</span>下载源码</div><div class="line">tar zxvf nginx-1.12.1.tar.gz	<span class="string">//</span>解压</div><div class="line"><span class="keyword">cd</span> nginx-1.12.1</div><div class="line"><span class="string">./configure</span></div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h3 id="开机启动nginx"><a href="#开机启动nginx" class="headerlink" title="开机启动nginx"></a>开机启动nginx</h3><p>即在rc.local增加启动代码就可以了。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vi /etc/rc.<span class="keyword">local</span></div><div class="line">增加一行 /usr/<span class="keyword">local</span>/nginx/sbin/nginx</div><div class="line">设置执行权限：</div><div class="line">chmod <span class="number">755</span> rc.<span class="keyword">local</span></div></pre></td></tr></table></figure></p>
<h2 id="启用服务器"><a href="#启用服务器" class="headerlink" title="启用服务器"></a>启用服务器</h2><h3 id="生成网页"><a href="#生成网页" class="headerlink" title="生成网页"></a>生成网页</h3><p>执行以下命令生成<em>public</em>文件夹即为博客网页<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo <span class="keyword">generate</span></div></pre></td></tr></table></figure></p>
<h3 id="修改nginx-conf"><a href="#修改nginx-conf" class="headerlink" title="修改nginx.conf"></a>修改nginx.conf</h3><p>修改<em>server</em>下<em>location-root</em>,该目录为网站对应的目录,将上面生成的目录下所有文件拷贝到上述目录，执行<code>/usr/local/nginx/sbin/nginx -s reload</code>重启nginx即可</p>
<blockquote>
<p>nginx.conf(仅修改部分)<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">user</span>  nginx;</div><div class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="comment">#error_log  logs/error.log;</span></div><div class="line"><span class="comment">#error_log  logs/error.log  notice;</span></div><div class="line"><span class="comment">#error_log  logs/error.log  info;</span></div><div class="line"></div><div class="line"><span class="comment">#pid        logs/nginx.pid;</span></div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">    <span class="attribute">include</span>       mime.types;</div><div class="line">    <span class="attribute">default_type</span>  application/octet-stream;</div><div class="line"></div><div class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></div><div class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></div><div class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></div><div class="line"></div><div class="line">    <span class="comment">#access_log  logs/access.log  main;</span></div><div class="line"></div><div class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</div><div class="line">    <span class="comment">#tcp_nopush     on;</span></div><div class="line"></div><div class="line">    <span class="comment">#keepalive_timeout  0;</span></div><div class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</div><div class="line"></div><div class="line">    <span class="comment">#gzip  on;</span></div><div class="line"></div><div class="line">    <span class="section">server</span> &#123;</div><div class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</div><div class="line">        <span class="attribute">server_name</span>  xxx.com;</div><div class="line"></div><div class="line">        <span class="comment">#charset koi8-r;</span></div><div class="line"></div><div class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></div><div class="line"></div><div class="line">        <span class="attribute">location</span> / &#123;</div><div class="line">            <span class="attribute">root</span>  /home/nginx/www/blog;</div><div class="line">            <span class="attribute">index</span>  index.html index.htm;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="attribute">error_page</span>  <span class="number">404</span>              /<span class="number">404</span>.html;</div><div class="line"></div><div class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</div><div class="line">        <span class="attribute">location</span> = /50x.html &#123;</div><div class="line">            <span class="attribute">root</span>   html;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h1 id="启用HTTPS-TLS1-3"><a href="#启用HTTPS-TLS1-3" class="headerlink" title="启用HTTPS(TLS1.3)"></a>启用HTTPS(TLS1.3)</h1><h2 id="nginx环境"><a href="#nginx环境" class="headerlink" title="nginx环境"></a>nginx环境</h2><p>Nginx 1.13.0 开始 正式支持 ssl_protocols 的 TLSv1.3 的选项.<br>1.下载对应的包<br>下载 Nginx 1.13.4</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https:<span class="comment">//nginx.org/download/nginx-1.13.4.tar.gz</span></div><div class="line">tar zxf nginx-<span class="number">1.13</span>.<span class="number">4</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure>
<p>安装 google-perftools</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> google-perftools google-perftools-devel</div></pre></td></tr></table></figure>
<p>下载 OpenSSL tls1.3-draft-18 分支</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">-b</span> tls1.<span class="number">3</span>-draft-<span class="number">18</span> --single-branch https://github.com/openssl/openssl.git openssl-tls1.<span class="number">3</span></div></pre></td></tr></table></figure>
<p>下载 cloudflare patch 打 http2_hpack 补丁 </p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/cloudflare/</span>sslconfig.git</div><div class="line">cp sslconfig<span class="regexp">/patches/</span>nginx_1.<span class="number">13.1</span>_http2_hpack.patch nginx-<span class="number">1.13</span>.<span class="number">4</span><span class="regexp">/</span></div></pre></td></tr></table></figure>
<p>配置nginx源码<br>注意: OpenSSL Dev tls1.3-draft-18 不会默认 开启 TLS1.3 需要 加入 –with-openssl-opt=enable-tls1_3 项<br>http2 hpack 需要加入 –with-http_v2_hpack_enc 项<br>如果需要添加其他模块也要在配置时加上 –add-module= …   //模块路径</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">cd ../nginx-1.13.4</div><div class="line">patch -p1 &lt; nginx_1.13.1_http2_hpack.patch</div><div class="line">./configure --prefix=/etc/nginx \</div><div class="line">-<span class="ruby">-sbin-path=<span class="regexp">/usr/sbin</span><span class="regexp">/nginx \</span></span></div><div class="line"><span class="ruby">--modules-path=<span class="regexp">/usr/lib</span>64/nginx/modules \</span></div><div class="line"><span class="ruby">--conf-path=<span class="regexp">/etc/nginx</span><span class="regexp">/nginx.conf \</span></span></div><div class="line"><span class="ruby">--error-log-path=<span class="regexp">/var/log</span><span class="regexp">/nginx/error</span>.log \</span></div><div class="line"><span class="ruby">--http-log-path=<span class="regexp">/var/log</span><span class="regexp">/nginx/access</span>.log \</span></div><div class="line"><span class="ruby">--pid-path=<span class="regexp">/var/run</span><span class="regexp">/nginx.pid \</span></span></div><div class="line"><span class="ruby">--lock-path=<span class="regexp">/var/run</span><span class="regexp">/nginx.lock \</span></span></div><div class="line"><span class="ruby">--http-client-body-temp-path=<span class="regexp">/var/cache</span><span class="regexp">/nginx/client</span>_temp \</span></div><div class="line"><span class="ruby">--http-proxy-temp-path=<span class="regexp">/var/cache</span><span class="regexp">/nginx/proxy</span>_temp \</span></div><div class="line"><span class="ruby">--http-fastcgi-temp-path=<span class="regexp">/var/cache</span><span class="regexp">/nginx/fastcgi</span>_temp \</span></div><div class="line"><span class="ruby">--http-uwsgi-temp-path=<span class="regexp">/var/cache</span><span class="regexp">/nginx/uwsgi</span>_temp \</span></div><div class="line"><span class="ruby">--http-scgi-temp-path=<span class="regexp">/var/cache</span><span class="regexp">/nginx/scgi</span>_temp \</span></div><div class="line"><span class="ruby">--user=nginx \</span></div><div class="line"><span class="ruby">--group=nginx \</span></div><div class="line"><span class="ruby">--with-threads \</span></div><div class="line"><span class="ruby">--with-file-aio \</span></div><div class="line"><span class="ruby">--with-http_ssl_module \</span></div><div class="line"><span class="ruby">--with-http_realip_module \</span></div><div class="line"><span class="ruby">--with-http_addition_module \</span></div><div class="line"><span class="ruby">--with-http_sub_module \</span></div><div class="line"><span class="ruby">--with-http_degradation_module \</span></div><div class="line"><span class="ruby">--with-http_flv_module \</span></div><div class="line"><span class="ruby">--with-http_mp4_module \</span></div><div class="line"><span class="ruby">--with-http_gunzip_module \</span></div><div class="line"><span class="ruby">--with-http_gzip_static_module \</span></div><div class="line"><span class="ruby">--with-http_random_index_module \</span></div><div class="line"><span class="ruby">--with-http_secure_link_module \</span></div><div class="line"><span class="ruby">--with-http_stub_status_module \</span></div><div class="line"><span class="ruby">--with-http_auth_request_module \</span></div><div class="line"><span class="ruby">--with-stream \</span></div><div class="line"><span class="ruby">--with-stream_ssl_module \</span></div><div class="line"><span class="ruby">--with-stream_ssl_preread_module \</span></div><div class="line"><span class="ruby">--with-stream_realip_module \</span></div><div class="line"><span class="ruby">--with-http_slice_module \</span></div><div class="line"><span class="ruby">--with-mail \</span></div><div class="line"><span class="ruby">--with-mail_ssl_module \</span></div><div class="line"><span class="ruby">--with-http_v2_module \</span></div><div class="line"><span class="ruby">--with-http_v2_hpack_enc \</span></div><div class="line"><span class="ruby">--with-openssl=<span class="regexp">/root/openssl</span>-tls1.<span class="number">3</span> \</span></div><div class="line"><span class="ruby">--with-openssl-opt=enable-tls1_3 \</span></div><div class="line"><span class="ruby">--with-google_perftools_module</span></div></pre></td></tr></table></figure>
<p>编译安装</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">make</span> -j8 &amp;&amp; <span class="built_in">make</span> install</div></pre></td></tr></table></figure>
<p>检测</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">nginx -t</span></div></pre></td></tr></table></figure>
<h2 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a>SSL证书</h2><p>下载源码</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/letsencrypt/letsencrypt</div></pre></td></tr></table></figure>
<p>生成证书</p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> letsencrypt</div><div class="line"><span class="string">./letsencrypt-auto</span> certonly <span class="params">--standalone</span> <span class="params">--email</span> xxxxx@xxx.com -d xxx.com </div><div class="line"><span class="string">//</span>生成的证书默认在<span class="string">/etc/letsencrypt/live</span>下</div></pre></td></tr></table></figure>
<p>自动续期证书<br>由于 Let’s Encrypt 默认有效期为90天，过了60天就可以续期。为了避免忘记续期，添加一个脚本每天自动运行。为了保证nginx稳定性，每天定期重启一次，一并添加至脚本中</p>
<blockquote>
<p>ssl_renew.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">cd</span> /root/letsencrypt</div><div class="line">git pull</div><div class="line"></div><div class="line"><span class="built_in">cd</span> /root/letsencrypt</div><div class="line"><span class="keyword">if</span> ! ./letsencrypt-auto renew &gt; /var/<span class="built_in">log</span>/letsencrypt/renew.log 2&gt;&amp;1 ; <span class="keyword">then</span></div><div class="line"> <span class="built_in">echo</span> Automated renewal failed: | mail -s <span class="string">"LE renew failed"</span> xxx@xxx.com</div><div class="line"> cat /var/<span class="built_in">log</span>/letsencrypt/renew.log</div><div class="line"> <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">nginx -s reload</div></pre></td></tr></table></figure></p>
</blockquote>
<p>定期执行脚本<br>修改/etc/crontab，添加执行命令</p>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">0 </span> <span class="number">5</span>  *  *  *  root       sh /root/ssl_renew.sh &gt; /dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></div></pre></td></tr></table></figure>
<p>查看是否添加成功 <code>crontab -l</code></p>
<h2 id="修改nginx-conf-1"><a href="#修改nginx-conf-1" class="headerlink" title="修改nginx.conf"></a>修改nginx.conf</h2><p>要想全站https，添加301跳转</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">server&#123;</div><div class="line">        listen <span class="number">80</span>;</div><div class="line">        server_name xxx.com;		<span class="regexp">//</span>跳转域名</div><div class="line">        <span class="comment">#告诉浏览器有效期内只准用 https 访问</span></div><div class="line">        add_header Strict-Transport-Security max-age=<span class="number">63072000</span>;</div><div class="line">        <span class="comment">#永久重定向到 https 站点</span></div><div class="line">        return <span class="number">301</span> https:<span class="regexp">//</span><span class="variable">$server_name</span><span class="variable">$request_uri</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>https server，默认监听443端口<br>ssl_protocols 中加入 TLSv1.3 (仅 Nginx 1.13.0 及以上 低版本用 TLSv1.2就行)</p>
<p>ssl_ciphers 加入 TLS1.3 加密套件 支持的有如下</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TLS13-CHACHA20-POLY1305-SHA256</div><div class="line">TLS13-AES<span class="number">-128</span>-GCM-SHA256</div><div class="line">TLS13-AES<span class="number">-256</span>-GCM-SHA384</div><div class="line">TLS13-AES<span class="number">-128</span>-CCM-SHA256</div><div class="line">TLS13-AES<span class="number">-128</span>-CCM<span class="number">-8</span>-SHA256</div></pre></td></tr></table></figure>
<blockquote>
<p>nginx.conf部分配置如下<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">server</span> &#123;</div><div class="line">        <span class="selector-tag">listen</span>       <span class="selector-tag">443</span> <span class="selector-tag">ssl</span>;</div><div class="line">        <span class="selector-tag">server_name</span>  <span class="selector-tag">xxx</span><span class="selector-class">.com</span>;</div><div class="line">    </div><div class="line">        #证书路径</div><div class="line">        <span class="selector-tag">ssl_certificate</span>      /<span class="selector-tag">etc</span>/<span class="selector-tag">letsencrypt</span>/<span class="selector-tag">live</span>/<span class="selector-tag">xxx</span><span class="selector-class">.com</span>/<span class="selector-tag">fullchain</span><span class="selector-class">.pem</span>;</div><div class="line">        <span class="selector-tag">ssl_certificate_key</span>  /<span class="selector-tag">etc</span>/<span class="selector-tag">letsencrypt</span>/<span class="selector-tag">live</span>/<span class="selector-tag">xxx</span><span class="selector-class">.com</span>/<span class="selector-tag">privkey</span><span class="selector-class">.pem</span>;</div><div class="line"></div><div class="line">        <span class="selector-tag">ssl_session_cache</span>    <span class="selector-tag">shared</span><span class="selector-pseudo">:SSL</span><span class="selector-pseudo">:1m</span>;</div><div class="line">        <span class="selector-tag">ssl_session_timeout</span>  <span class="selector-tag">5m</span>;</div><div class="line">        <span class="selector-tag">ssl_protocols</span> <span class="selector-tag">TLSv1</span><span class="selector-class">.1</span> <span class="selector-tag">TLSv1</span><span class="selector-class">.2</span> <span class="selector-tag">TLSv1</span><span class="selector-class">.3</span>;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="selector-tag">ssl_ciphers</span>       <span class="selector-tag">TLS13-AES-128-GCM-SHA256</span><span class="selector-pseudo">:TLS13-CHACHA20-POLY1305-SHA256</span><span class="selector-pseudo">:CHACHA20</span><span class="selector-pseudo">:EECDH+AESGCM</span><span class="selector-pseudo">:EDH+AESGCM</span><span class="selector-pseudo">:AES256+EECDH</span><span class="selector-pseudo">:AES256+EDH</span><span class="selector-pseudo">:ECDHE-RSA-AES128-GCM-SHA384</span><span class="selector-pseudo">:ECDHE-RSA-AES128-GCM-SHA256</span><span class="selector-pseudo">:ECDHE-RSA-AES128-GCM-SHA128</span><span class="selector-pseudo">:DHE-RSA-AES128-GCM-SHA384</span><span class="selector-pseudo">:DHE-RSA-AES128-GCM-SHA256</span><span class="selector-pseudo">:DHE-RSA-AES128-GCM-SHA128</span><span class="selector-pseudo">:ECDHE-RSA-AES128-SHA384</span><span class="selector-pseudo">:ECDHE-RSA-AES128-SHA128</span><span class="selector-pseudo">:ECDHE-RSA-AES128-SHA</span><span class="selector-pseudo">:ECDHE-RSA-AES128-SHA</span><span class="selector-pseudo">:DHE-RSA-AES128-SHA128</span><span class="selector-pseudo">:DHE-RSA-AES128-SHA128</span><span class="selector-pseudo">:DHE-RSA-AES128-SHA</span><span class="selector-pseudo">:DHE-RSA-AES128-SHA</span><span class="selector-pseudo">:ECDHE-RSA-DES-CBC3-SHA</span><span class="selector-pseudo">:EDH-RSA-DES-CBC3-SHA</span><span class="selector-pseudo">:AES128-GCM-SHA384</span><span class="selector-pseudo">:AES128-GCM-SHA128</span><span class="selector-pseudo">:AES128-SHA128</span><span class="selector-pseudo">:AES128-SHA128</span><span class="selector-pseudo">:AES128-SHA</span><span class="selector-pseudo">:AES128-SHA</span><span class="selector-pseudo">:DES-CBC3-SHA</span><span class="selector-pseudo">:HIGH</span>:!<span class="selector-tag">aNULL</span>:!<span class="selector-tag">eNULL</span>:!<span class="selector-tag">EXPORT</span>:!<span class="selector-tag">DES</span>:!<span class="selector-tag">MD5</span>:!<span class="selector-tag">PSK</span>:!<span class="selector-tag">RC4</span>;</div><div class="line"></div><div class="line">        <span class="selector-tag">ssl_prefer_server_ciphers</span>  <span class="selector-tag">on</span>;</div><div class="line"></div><div class="line">        <span class="selector-tag">location</span> / &#123;</div><div class="line">            <span class="selector-tag">root</span>   /<span class="selector-tag">home</span>/<span class="selector-tag">nginx</span>/<span class="selector-tag">www</span>/<span class="selector-tag">blog</span>;</div><div class="line">            <span class="selector-tag">index</span>  <span class="selector-tag">index</span><span class="selector-class">.html</span> <span class="selector-tag">index</span><span class="selector-class">.htm</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>最终效果<br><img src="/2017/08/27/VPS Notes/1.png" alt="111"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人VPS折腾笔记(Based on Center OS 7)&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Notes" scheme="http://mxdhqm.com/categories/Notes/"/>
    
    
      <category term="VPS Notes" scheme="http://mxdhqm.com/tags/VPS-Notes/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPod的使用</title>
    <link href="http://mxdhqm.com/2016/10/06/using%20cocoapod/"/>
    <id>http://mxdhqm.com/2016/10/06/using cocoapod/</id>
    <published>2016-10-06T01:23:15.000Z</published>
    <updated>2017-09-05T01:31:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>macOS Sierra 出来了半个月了吧，电脑iCloud一直有问题没时间弄，十一期间决定重新安装了电脑，由于不想使用Time Machine，故安装完后环境啥的都要重新配置了。。。。。。</p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;macOS Sierra 出来了半个月了吧，电脑iCloud一直有问题没时间弄，十一期间决定重新安装了电脑，由于不想使用Time Machine，故安装完后环境啥的都要重新配置了。。。。。。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://mxdhqm.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://mxdhqm.com/tags/iOS/"/>
    
      <category term="CocoaPod" scheme="http://mxdhqm.com/tags/CocoaPod/"/>
    
      <category term="using CocoaPod" scheme="http://mxdhqm.com/tags/using-CocoaPod/"/>
    
  </entry>
  
  <entry>
    <title>NSTime小记</title>
    <link href="http://mxdhqm.com/2015/12/13/NSTime/"/>
    <id>http://mxdhqm.com/2015/12/13/NSTime/</id>
    <published>2015-12-13T01:23:15.000Z</published>
    <updated>2016-08-03T07:51:09.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>NSRunLoopCommonModes和Timer</p>
<p> 当使用NSTimer的scheduledTimerWithTimeInterval方法时。事实上此时Timer会被加入到当前线程的Run Loop中，且模式是默认的NSDefaultRunLoopMode。而如果当前线程就是主线程，也就是UI线程时，某些UI事件，比如UIScrollView的拖动操作，会将Run Loop切换成NSEventTrackingRunLoopMode模式，在这个过程中，默认的NSDefaultRunLoopMode模式中注册的事件是不会被执行的。也就是说，此时使用scheduledTimerWithTimeInterval添加到Run Loop中的Timer就不会执行。</p>
<a id="more"></a>
</li>
</ol>
<pre><code>所以为了设置一个不被UI干扰的Timer，我们需要手动创建一个Timer，然后使用NSRunLoop的addTimer:forMode:方法来把Timer按照指定模式加入到Run Loop中。这里使用的模式是：NSRunLoopCommonModes，这个模式等效于NSDefaultRunLoopMode和NSEventTrackingRunLoopMode的结合。（参考Apple文档）
</code></pre><p>参考代码：</p>
<ul>
<li><p>(void)viewDidLoad<br>{<br>  [super viewDidLoad];</p>
<p>  NSLog(@”主线程 %@”, [NSThread currentThread]);<br>  //创建Timer<br>  NSTimer *timer = [NSTimer timerWithTimeInterval:2.0 target:self selector:@selector(timer_callback) userInfo:nil repeats:YES];<br>  //使用NSRunLoopCommonModes模式，把timer加入到当前Run Loop中。<br>  [[NSRunLoop currentRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];<br>}</p>
</li>
</ul>
<p>//timer的回调方法</p>
<ul>
<li>(void)timer_callback<br>{<br>  NSLog(@”Timer %@”, [NSThread currentThread]);<br>}</li>
</ul>
<p>输出：</p>
<p>主线程 <nsthread: 0x71501e0="">{name = (null), num = 1}<br>Timer <nsthread: 0x71501e0="">{name = (null), num = 1}<br>Timer <nsthread: 0x71501e0="">{name = (null), num = 1}<br>Timer <nsthread: 0x71501e0="">{name = (null), num = 1}</nsthread:></nsthread:></nsthread:></nsthread:></p>
<p>返回目录</p>
<ol>
<li><p>NSThread和Timer</p>
<p> 上面讲的NSRunLoopCommonModes和Timer中有一个问题，这个Timer本质上是在当前线程的Run Loop中循环执行的，因此Timer的回调方法不是在另一个线程的。那么怎样在真正的多线程环境下运行一个Timer呢？</p>
<p> 可以先试试NSThread。同上，我们还是会把Timer加到Run Loop中，只不过这个是在另一个线程中，因此我们需要手动执行Run Loop（通过NSRunLoop的run方法），同时注意在新的线程执行中加入@autoreleasepool。</p>
</li>
</ol>
<p>完整代码如下：</p>
<ul>
<li><p>(void)viewDidLoad<br>{<br>  [super viewDidLoad];</p>
<p>  NSLog(@”主线程 %@”, [NSThread currentThread]);</p>
<p>  //创建并执行新的线程<br>  NSThread *thread = [[NSThread alloc] initWithTarget:self selector:@selector(newThread) object:nil];<br>  [thread start];<br>}</p>
</li>
<li><p>(void)newThread<br>{<br>  @autoreleasepool<br>  {</p>
<pre><code>//在当前Run Loop中添加timer，模式是默认的NSDefaultRunLoopMode
[NSTimer scheduledTimerWithTimeInterval:2.0 target:self selector:@selector(timer_callback) userInfo:nil repeats:YES];
//开始执行新线程的Run Loop
[[NSRunLoop currentRunLoop] run];
</code></pre><p>  }<br>}</p>
</li>
</ul>
<p>//timer的回调方法</p>
<ul>
<li>(void)timer_callback<br>{<br>  NSLog(@”Timer %@”, [NSThread currentThread]);<br>}</li>
</ul>
<p>输出：</p>
<p>主线程 <nsthread: 0x7118800="">{name = (null), num = 1}<br>Timer <nsthread: 0x715c2e0="">{name = (null), num = 3}<br>Timer <nsthread: 0x715c2e0="">{name = (null), num = 3}<br>Timer <nsthread: 0x715c2e0="">{name = (null), num = 3}</nsthread:></nsthread:></nsthread:></nsthread:></p>
<p>返回目录</p>
<ol>
<li>GCD中的Timer</li>
</ol>
<p>GCD中的Timer应该是最灵活的，而且是多线程的。GCD中的Timer是靠Dispatch Source来实现的。</p>
<p>因此先需要声明一个dispatch_source_t本地变量：</p>
<p>@interface ViewController ()<br>{<br>    dispatch_source_t _timer;<br>}</p>
<p>接着通过dispatch_source_create函数来创建一个专门的Dispatch Source，接着通过dispatch_source_set_timer函数来设置Timer的参数，注意这里的时间参数有些蛋疼。</p>
<p>开始时间的类型是dispatch_time_t，最好用dispatch_time或者dispatch_walltime函数来创建dispatch_time_t对象。如果需要Timer立即执行，可以传入dispatch_time(DISPATCH_TIME_NOW, 0)。</p>
<p>internal和leeway参数分别表示Timer的间隔时间和精度。类型都是uint64_t。间隔时间的单位竟然是纳秒。可以借助预定义的NSEC_PER_SEC宏，比如如果间隔时间是两秒的话，那interval参数就是：2 * NSEC_PER_SEC。</p>
<p>leeway就是精度参数，代表系统可以延时的时间间隔，最高精度当然就传0。</p>
<p>然后通过dispatch_source_set_event_handler函数来设置Dispatch Source的事件回调，这里当然是使用Block了。</p>
<p>最后所有dispatch_source_t创建后默认都是暂停状态的，所以必须通过dispatch_resume函数来开始事件监听。这里就代表着开始Timer。</p>
<p>完整代码：</p>
<p>NSLog(@”主线程 %@”, [NSThread currentThread]);<br>//间隔还是2秒<br>uint64_t interval = 2 * NSEC_PER_SEC;<br>//创建一个专门执行timer回调的GCD队列<br>dispatch_queue_t queue = dispatch_queue_create(“my queue”, 0);<br>//创建Timer<br>_timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);<br>//使用dispatch_source_set_timer函数设置timer参数<br>dispatch_source_set_timer(_timer, dispatch_time(DISPATCH_TIME_NOW, 0), interval, 0);<br>//设置回调<br>dispatch_source_set_event_handler(_timer, ^()<br>{<br>    NSLog(@”Timer %@”, [NSThread currentThread]);<br>});<br>//dispatch_source默认是Suspended状态，通过dispatch_resume函数开始它<br>dispatch_resume(_timer);</p>
<p>输出：</p>
<p>主线程 <nsthread: 0x711fab0="">{name = (null), num = 1}<br>Timer <nsthread: 0x713a380="">{name = (null), num = 3}<br>Timer <nsthread: 0x713a380="">{name = (null), num = 3}<br>Timer <nsthread: 0x713a380="">{name = (null), num = 3}</nsthread:></nsthread:></nsthread:></nsthread:></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;NSRunLoopCommonModes和Timer&lt;/p&gt;
&lt;p&gt; 当使用NSTimer的scheduledTimerWithTimeInterval方法时。事实上此时Timer会被加入到当前线程的Run Loop中，且模式是默认的NSDefaultRunLoopMode。而如果当前线程就是主线程，也就是UI线程时，某些UI事件，比如UIScrollView的拖动操作，会将Run Loop切换成NSEventTrackingRunLoopMode模式，在这个过程中，默认的NSDefaultRunLoopMode模式中注册的事件是不会被执行的。也就是说，此时使用scheduledTimerWithTimeInterval添加到Run Loop中的Timer就不会执行。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://mxdhqm.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://mxdhqm.com/tags/iOS/"/>
    
      <category term="NSTime" scheme="http://mxdhqm.com/tags/NSTime/"/>
    
  </entry>
  
  <entry>
    <title>JsPatch</title>
    <link href="http://mxdhqm.com/2015/12/13/jsPatch/"/>
    <id>http://mxdhqm.com/2015/12/13/jsPatch/</id>
    <published>2015-12-13T01:23:15.000Z</published>
    <updated>2016-08-15T01:16:37.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://mxdhqm.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://mxdhqm.com/tags/iOS/"/>
    
      <category term="NSTime" scheme="http://mxdhqm.com/tags/NSTime/"/>
    
  </entry>
  
  <entry>
    <title>布局包含Image和Title的UIButton</title>
    <link href="http://mxdhqm.com/2015/12/10/custom%20UIButton%20Title%20&amp;%20Image/"/>
    <id>http://mxdhqm.com/2015/12/10/custom UIButton Title &amp; Image/</id>
    <published>2015-12-10T14:12:13.000Z</published>
    <updated>2017-09-06T07:26:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>UIButton中的titleEdgeInsets和imageEdgeInsets可以管理button中image和title的布局。 如果对其理解不够深入，用纯数字进行布局管理，经过不断的调试，还是能试出来的，但是如果改变了图片大小或文字长度，又要再来一遍。 作为程序猿，我们不应该放弃任何一个偷懒的机会。<br><a id="more"></a></p>
<ul>
<li>默认情况下，是图片在左，文字在右，垂直居中显示，如下图：</li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">button.titleEdgeInsets </span>= UIEdgeInsetsZero<span class="comment">;</span></div><div class="line"><span class="keyword">button.imageEdgeInsets </span>= UIEdgeInsetsZero<span class="comment">;</span></div></pre></td></tr></table></figure>
<p><img src="/2015/12/10/custom UIButton Title & Image/customButton1.png" alt="customButton icon1"></p>
<ul>
<li>设置如下布局后，图片和文字都居中显示。</li>
</ul>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">button.titleEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, -button.imageView.frame.size.width, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line"><span class="comment">// button.imageEdgeInsets = UIEdgeInsetsMake(0, 0, 0, -button.titleLabel.frame.size.width); </span></div><div class="line"><span class="comment">// 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可</span></div><div class="line">button.imageEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -button.titleLabel.intrinsicContentSize.width);</div></pre></td></tr></table></figure>
<p><img src="/2015/12/10/custom UIButton Title & Image/customButton2.png" alt="customButton icon2"></p>
<ul>
<li>如果想图片在上，文字在下，水平居中显示，则按下面设置即可：</li>
</ul>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">button</span>.titleEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, -<span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.width, -<span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.height, <span class="number">0</span>);</div><div class="line"><span class="comment">// button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.frame.size.height, 0, 0, -button.titleLabel.frame.size.width);</span></div><div class="line"><span class="comment">// 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可</span></div><div class="line"><span class="keyword">button</span>.imageEdgeInsets = UIEdgeInsetsMake(-<span class="keyword">button</span>.titleLabel.intrinsicContentSize.height, <span class="number">0</span>, <span class="number">0</span>, -<span class="keyword">button</span>.titleLabel.intrinsicContentSize.width);</div></pre></td></tr></table></figure>
<p><img src="/2015/12/10/custom UIButton Title & Image/customButton3.png" alt="customButton icon3"></p>
<ul>
<li>如果觉得图片和文字离的太近了，稍微分开一点：</li>
</ul>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CGFloat offset = <span class="number">40.0</span>f;</div><div class="line"><span class="keyword">button</span>.titleEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, -<span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.width, -<span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.height-offset/<span class="number">2</span>, <span class="number">0</span>);</div><div class="line"><span class="comment">// button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.frame.size.height-offset/2, 0, 0, -button.titleLabel.frame.size.width);</span></div><div class="line"><span class="comment">// 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可</span></div><div class="line"><span class="keyword">button</span>.imageEdgeInsets = UIEdgeInsetsMake(-<span class="keyword">button</span>.titleLabel.intrinsicContentSize.height-offset/<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="keyword">button</span>.titleLabel.intrinsicContentSize.width);</div></pre></td></tr></table></figure>
<p><img src="/2015/12/10/custom UIButton Title & Image/customButton4.png" alt="customButton icon4"></p>
<ul>
<li>文字左对齐，图片右对齐</li>
</ul>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">button</span>.titleEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, -<span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.width - <span class="keyword">button</span>.frame.<span class="keyword">size</span>.width + <span class="keyword">button</span>.titleLabel.intrinsicContentSize.width, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    <span class="keyword">button</span>.imageEdgeInsets = UIEdgeInsetsMake(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, -<span class="keyword">button</span>.titleLabel.frame.<span class="keyword">size</span>.width - <span class="keyword">button</span>.frame.<span class="keyword">size</span>.width + <span class="keyword">button</span>.imageView.frame.<span class="keyword">size</span>.width);</div></pre></td></tr></table></figure>
<p><img src="/2015/12/10/custom UIButton Title & Image/customButton5.png" alt="customButton icon5"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UIButton中的titleEdgeInsets和imageEdgeInsets可以管理button中image和title的布局。 如果对其理解不够深入，用纯数字进行布局管理，经过不断的调试，还是能试出来的，但是如果改变了图片大小或文字长度，又要再来一遍。 作为程序猿，我们不应该放弃任何一个偷懒的机会。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://mxdhqm.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://mxdhqm.com/tags/iOS/"/>
    
      <category term="UIButton" scheme="http://mxdhqm.com/tags/UIButton/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(三)</title>
    <link href="http://mxdhqm.com/2015/12/07/Build%20personal%20blog%20three/"/>
    <id>http://mxdhqm.com/2015/12/07/Build personal blog three/</id>
    <published>2015-12-07T12:53:11.000Z</published>
    <updated>2016-08-15T01:16:24.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="教程" scheme="http://mxdhqm.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Blog" scheme="http://mxdhqm.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://mxdhqm.com/tags/Hexo/"/>
    
      <category term="Github Pages" scheme="http://mxdhqm.com/tags/Github-Pages/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(二)</title>
    <link href="http://mxdhqm.com/2015/12/06/Build%20personal%20blog%20two/"/>
    <id>http://mxdhqm.com/2015/12/06/Build personal blog two/</id>
    <published>2015-12-06T14:01:15.000Z</published>
    <updated>2016-08-08T02:29:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>搭建WordPress Blog</p>
<a id="more"></a>
<p>##本地安装wordpress</p>
<p>###准备</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建WordPress Blog&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://mxdhqm.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Blog" scheme="http://mxdhqm.com/tags/Blog/"/>
    
      <category term="WordPress" scheme="http://mxdhqm.com/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(一)</title>
    <link href="http://mxdhqm.com/2015/12/05/Build%20personal%20blog%20one/"/>
    <id>http://mxdhqm.com/2015/12/05/Build personal blog one/</id>
    <published>2015-12-05T07:22:46.000Z</published>
    <updated>2016-08-04T02:05:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>此处记录从笔记到博客一步步的转化的过程</p>
<a id="more"></a>
<p>##传统笔记<br>当完成一件事过后，需要记录下来苏发现的问题，笔记便成了最好的选择，从以前的纸质笔记开始，一段时间过后，发现再次遇到某一问题时，无法准确定位到自己笔记的位置所在，故寻求新的方案。</p>
<p>##在线笔记<br>尝试在电脑上记录笔记，但使用word或记事本的话无法方便管理(当然存在本地很好的记录软件)，为了方便在不同终端上都可以方便记录和预览笔记，当时我选择了<a href="https://www.yinxiang.com/" target="_blank" rel="external">印象笔记</a>。</p>
<p>##在线博客<br>之后选择了<a href="http://blog.csdn.net/mxdhqm" target="_blank" rel="external">CSDN</a>，<a href="http://mxdhqm.blog.51cto.com/" target="_blank" rel="external">51CTO</a>等等第三方的博客服务，始终感觉限制很多(省略N字)，于是便开始尝试走向了自己搭建博客的道路。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此处记录从笔记到博客一步步的转化的过程&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://mxdhqm.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="笔记" scheme="http://mxdhqm.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Blog" scheme="http://mxdhqm.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>关闭Android File Transfer自启</title>
    <link href="http://mxdhqm.com/2015/07/13/remove%20Android%20File%20Transfer/"/>
    <id>http://mxdhqm.com/2015/07/13/remove Android File Transfer/</id>
    <published>2015-07-13T07:22:46.000Z</published>
    <updated>2016-08-03T07:51:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Mac中查看安卓手机数据要用到Android File Transfer这个软件，但是一直删不掉自启，使用CleanMyMac删除后，再次启动任然能自启，使用以下方法达到屏蔽自启<br><a id="more"></a><br>1.在活动监视器中结束Android File Transfer进程<br>2.在系统偏好设置-用户和群组中，点击登陆项，把Android File Transfer的启动项删除<br>3.在Terminal中依次运行如下命令 </p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rm -r ~/Library/Application<span class="string">\</span> Support/Google/Android<span class="string">\</span> File<span class="string">\</span> Transfer/Android<span class="string">\</span> File<span class="string">\</span> Transfer<span class="string">\</span> Agent.app</div><div class="line">cd /Applications/Android<span class="string">\</span> File<span class="string">\</span> Transfer.app/Contents/Resources</div><div class="line">mv Android<span class="string">\</span> File<span class="string">\</span> Transfer<span class="string">\</span> Agent.app Android<span class="string">\</span> File<span class="string">\</span> Transfer<span class="string">\</span> Agent.app.disable</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Mac中查看安卓手机数据要用到Android File Transfer这个软件，但是一直删不掉自启，使用CleanMyMac删除后，再次启动任然能自启，使用以下方法达到屏蔽自启&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac日常" scheme="http://mxdhqm.com/categories/Mac%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Mac" scheme="http://mxdhqm.com/tags/Mac/"/>
    
      <category term="Android File Transfer" scheme="http://mxdhqm.com/tags/Android-File-Transfer/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[next主题美化]]></title>
    <url>%2F2019%2F04%2F08%2Fhexo-beautify%2F</url>
    <content type="text"><![CDATA[修改hexo next主题样式 Hexo&amp;Next版本12Hexo v3.8.0 NexT.Pisces v7.1.0 默认样式主题默认配置见next官方blog 自定义样式修改对应目录下的custom.styl即可 修改背景，边栏透明，为每个文章加上边框123456789101112131415161718192021222324252627282930313233343536373839.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125;.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125;.posts-expand &#123; .post-eof &#123; display: block; width: 0%; height: 0px; background: $grey-light; text-align: center; &#125;&#125;.header-inner &#123; background: rgba(255, 255, 255, 0.5);&#125;.content-wrap &#123; background: transparent;&#125;.sidebar-inner &#123; background: rgba(255, 255, 255, 0.5);&#125;]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>hexo custom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPS Notes]]></title>
    <url>%2F2017%2F08%2F27%2FVPS-Notes%2F</url>
    <content type="text"><![CDATA[个人VPS折腾笔记(Based on Center OS 7)近期搬瓦工上线了CN2线路的VPS,售价$29.9，还不错，便入手了一台。购买链接(含aff) 加速（锐速,BBR）锐速安装wget1yum install wget 下载锐速脚本1wget -N --no-check-certificate https://raw.githubusercontent.com/wn789/serverspeeder/master/serverspeeder.sh 执行脚本1bash serverspeeder.sh 默认脚本不支持Center OS,需要更换内核（版本：3.10.0-327.el7.x86_64） 1rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-3.10.0-229.1.2.el7.x86_64.rpm --force 查看安装好的内核 1rpm -qa | grep kernel 存在kernel-3.10.0-327.el7.x86_64即可 重启VPS 12rebootuname -a //查看是否更换成功 内核如下 1Linux host.localdomain 3.10.0-229.1.2.el7.x86_64 #1 SMP Fri Mar 27 03:04:26 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux 再次执行脚本 1bash serverspeeder.sh BBR安装wget1yum install wget 下载bbr脚本并执行123wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh 查看安装情况12345678uname -rsysctl net.ipv4.tcp_available_congestion_control //查看返回值返回net.ipv4.tcp_available_congestion_control = bbr cubic reno即正常sysctl net.ipv4.tcp_congestion_control返回 net.ipv4.tcp_congestion_control = bbrlsmod | grep bbr //查看bbr是否启动 使用一键脚本1wget -N --no-check-certificate "https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh 防火墙centerOS 7默认为firewalld防火墙使用方法 firewalld的基本使用启动: systemctl start firewalld 查看状态: systemctl status firewalld 停止： systemctl disable firewalld 禁用： systemctl stop firewalld systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。启动一个服务：systemctl start firewalld.service 关闭一个服务：systemctl stop firewalld.service 重启一个服务：systemctl restart firewalld.service 显示一个服务的状态：systemctl status firewalld.service 在开机时启用一个服务：systemctl enable firewalld.service 在开机时禁用一个服务：systemctl disable firewalld.service 查看服务是否开机启动：systemctl is-enabled firewalld.service 查看已启动的服务列表：systemctl list-unit-files|grep enabled 查看启动失败的服务列表：systemctl --failed 配置firewalld-cmd查看版本： firewall-cmd --version 查看帮助： firewall-cmd --help 显示状态： firewall-cmd --state 查看所有打开的端口： firewall-cmd --zone=public --list-ports 更新防火墙规则： firewall-cmd --reload 查看区域信息: firewall-cmd --get-active-zones 查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0 拒绝所有包：firewall-cmd --panic-on 取消拒绝状态： firewall-cmd --panic-off 查看是否拒绝： firewall-cmd --query-panic 那怎么开启一个端口呢 添加12firewall-cmd --zone=public --add-port=80/tcp --permanent(--permanent永久生效，没有此参数重启后失效) 重新载入 firewall-cmd --reload 查看firewall-cmd --zone= public --query-port=80/tcp 删除 firewall-cmd --zone= public --remove-port=80/tcp --permanent 搭建Hexo博客环境搭建安装node安装编译环境1sudo yum install gcc gcc-c++ 安装nvm12curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bashnvm --version //查看安装的nvm版本 选择版本并安装123nvm list-remote //查看所有node版本nvm install v6.11.2 //安装v6.11.2node --version //查看安装的node版本 安装git1yum install git-core 安装hexo12npm install hexo-cli -ghexo --version 更新OpenSSL123456789101112wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1b.zipunzip OpenSSL_1_1_1b.zipcd openssl-OpenSSL_1_1_1bcurl https://raw.githubusercontent.com/hakasenyang/openssl-patch/master/openssl-1.1.1b-chacha_draft.patch | patch -p1./configmake install执行 openssl version 必报错误openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory解决方法ln -s /usr/local/lib64/libssl.so.1.1 /usr/lib64/libssl.so.1.1ln -s /usr/local/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1 安装nginx(默认配置)12345678910wget http://nginx.org/download/nginx-1.15.10.tar.gztar -zxvf nginx-1.15.10.tar.gzcd nginx-1.15.10./configure --with-http_v2_module --with-http_ssl_module --with-http_gzip_static_moduleyum install -y pcre-develyum install -y zlib-develmakemake install 开机启动nginx即在rc.local增加启动代码就可以了。1234vi /etc/rc.local增加一行 /usr/local/nginx/sbin/nginx设置执行权限：chmod 755 rc.local 启用服务器生成网页执行以下命令生成public文件夹即为博客网页12hexo cleanhexo generate 修改nginx.conf修改server下location-root,该目录为网站对应的目录,将上面生成的目录下所有文件拷贝到上述目录，执行/usr/local/nginx/sbin/nginx -s reload重启nginx即可 nginx.conf(仅修改部分)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455user nginx;worker_processes 1;#error_log logs/error.log;#error_log logs/error.log notice;#error_log logs/error.log info;#pid logs/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; #log_format main '$remote_addr - $remote_user [$time_local] "$request" ' # '$status $body_bytes_sent "$http_referer" ' # '"$http_user_agent" "$http_x_forwarded_for"'; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server &#123; listen 80; server_name xxx.com; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; root /home/nginx/www/blog; index index.html index.htm; &#125; error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;&#125; 启用HTTPS(TLS1.3)nginx环境见环境安装 SSL证书（通配证书）使用acme.sh 1curl https://get.acme.sh | sh 采用子账号生成Ali_Key 和 Ali_Secret 12export Ali_Key=""export Ali_Secret="" 生成证书1acme.sh --issue --dns dns_ali -d mxdhqm.com -d *.mxdhqm.com 自动续期证书由于 Let’s Encrypt 默认有效期为90天，过了60天就可以续期。为了避免忘记续期，添加一个脚本每天自动运行。为了保证nginx稳定性，每天定期重启一次，一并添加至脚本中 ssl_renew.sh123#!/bin/shacme.sh --renew -d mxdhqm.com -d *.mxdhqm.comnginx -s reload 定期执行脚本修改/etc/crontab，添加执行命令 10 5 * * * root sh /root/ssl_renew.sh &gt; /dev/null 2&gt;&amp;1 查看是否添加成功 crontab -l 修改nginx.conf要想全站https，添加301跳转 12345678server&#123; listen 80; server_name xxx.com; //跳转域名 #告诉浏览器有效期内只准用 https 访问 add_header Strict-Transport-Security max-age=63072000; #永久重定向到 https 站点 return 301 https://$server_name$request_uri; &#125; https server，默认监听443端口ssl_protocols 中加入 TLSv1.3 (仅 Nginx 1.13.0 及以上 低版本用 TLSv1.2就行) ssl_ciphers 加入 TLS1.3 加密套件 支持的有如下 12345TLS13-AES-256-GCM-SHA384TLS13-CHACHA20-POLY1305-SHA256TLS13-AES-128-GCM-SHA256TLS13-AES-128-CCM-8-SHA256TLS13-AES-128-CCM-SHA256 nginx.conf部分配置如下1234567891011121314151617181920212223server &#123; listen 443 ssl; server_name xxx.com; #证书路径 ssl_certificate /root/.acme.sh/mxdhqm.com/fullchain.cer; ssl_certificate_key /root/.acme.sh/mxdhqm.com/mxdhqm.com.key; ssl_trusted_certificate /root/.acme.sh/mxdhqm.com/ca.cer; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_protocols TLSv1.2 TLSv1.3; ssl_ciphers 'TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:SSLCipherSuiteECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256;'; ssl_prefer_server_ciphers on; location / &#123; root /home/nginx/www/blog; index index.html index.htm; &#125; &#125; 最终效果]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>VPS Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[布局包含Image和Title的UIButton]]></title>
    <url>%2F2015%2F12%2F10%2Fcustom-UIButton-Title-Image%2F</url>
    <content type="text"><![CDATA[UIButton中的titleEdgeInsets和imageEdgeInsets可以管理button中image和title的布局。 如果对其理解不够深入，用纯数字进行布局管理，经过不断的调试，还是能试出来的，但是如果改变了图片大小或文字长度，又要再来一遍。 默认情况下，是图片在左，文字在右，垂直居中显示，如下图： 12button.titleEdgeInsets = UIEdgeInsetsZero;button.imageEdgeInsets = UIEdgeInsetsZero; 设置如下布局后，图片和文字都居中显示。 1234button.titleEdgeInsets = UIEdgeInsetsMake(0, -button.imageView.frame.size.width, 0, 0);// button.imageEdgeInsets = UIEdgeInsetsMake(0, 0, 0, -button.titleLabel.frame.size.width); // 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可button.imageEdgeInsets = UIEdgeInsetsMake(0, 0, 0, -button.titleLabel.intrinsicContentSize.width); 如果想图片在上，文字在下，水平居中显示，则按下面设置即可： 1234button.titleEdgeInsets = UIEdgeInsetsMake(0, -button.imageView.frame.size.width, -button.imageView.frame.size.height, 0);// button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.frame.size.height, 0, 0, -button.titleLabel.frame.size.width);// 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.intrinsicContentSize.height, 0, 0, -button.titleLabel.intrinsicContentSize.width); 如果觉得图片和文字离的太近了，稍微分开一点： 12345CGFloat offset = 40.0f;button.titleEdgeInsets = UIEdgeInsetsMake(0, -button.imageView.frame.size.width, -button.imageView.frame.size.height-offset/2, 0);// button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.frame.size.height-offset/2, 0, 0, -button.titleLabel.frame.size.width);// 由于iOS8中titleLabel的size为0，用上面这样设置有问题，修改一下即可button.imageEdgeInsets = UIEdgeInsetsMake(-button.titleLabel.intrinsicContentSize.height-offset/2, 0, 0, -button.titleLabel.intrinsicContentSize.width); 文字左对齐，图片右对齐 12button.titleEdgeInsets = UIEdgeInsetsMake(0, -button.imageView.frame.size.width - button.frame.size.width + button.titleLabel.intrinsicContentSize.width, 0, 0); button.imageEdgeInsets = UIEdgeInsetsMake(0, 0, 0, -button.titleLabel.frame.size.width - button.frame.size.width + button.imageView.frame.size.width);]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>UIButton</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关闭Android File Transfer自启]]></title>
    <url>%2F2015%2F07%2F13%2Fremove-Android-File-Transfer%2F</url>
    <content type="text"><![CDATA[在Mac中查看安卓手机数据要用到Android File Transfer这个软件，但是一直删不掉自启，使用CleanMyMac删除后，再次启动任然能自启，使用以下方法达到屏蔽自启1.在活动监视器中结束Android File Transfer进程2.在系统偏好设置-用户和群组中，点击登陆项，把Android File Transfer的启动项删除3.在Terminal中依次运行如下命令 123rm -r ~/Library/Application\ Support/Google/Android\ File\ Transfer/Android\ File\ Transfer\ Agent.appcd /Applications/Android\ File\ Transfer.app/Contents/Resourcesmv Android\ File\ Transfer\ Agent.app Android\ File\ Transfer\ Agent.app.disable]]></content>
      <categories>
        <category>Common Problem</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Android File Transfer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu root&&root登陆声音问题]]></title>
    <url>%2F2014%2F07%2F02%2FUbuntu-root-sounds%2F</url>
    <content type="text"><![CDATA[解决默认root和root无声音问题 root登陆123456789101112131415161. sudo su root，然后输入密码2. gedit /etc/lightdm/lightdm.conf （事先可以先备份之）.[SeatDefaults]// 自动root登录添加 Ubuntu14.04#autologin-guest=trueautologin-user=rootautologin-user-timeout=2autologin-session=lightdm-autologin// 自动root登录添加greeter-session=unity-greeteruser-session=ubuntugreeter-show-manual-login=true #手工输入登陆系统的用户名和密码allow-guest=false #不允许guest登录 声音问题12345gedit /etc/profile添加一行pulseaudio --start --log-target=syslog]]></content>
      <categories>
        <category>Common Problem</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>root</tag>
        <tag>sounds</tag>
      </tags>
  </entry>
</search>
